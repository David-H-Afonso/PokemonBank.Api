// <auto-generated />
using System;
using BeastVault.Api.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BeastVault.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("BeastVault.Api.Domain.Entities.FileEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Format")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ImportedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("OriginalFileName")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("RawBlob")
                        .HasColumnType("BLOB");

                    b.Property<string>("Sha256")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("Size")
                        .HasColumnType("INTEGER");

                    b.Property<string>("StoredPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Sha256")
                        .IsUnique();

                    b.ToTable("Files");
                });

            modelBuilder.Entity("BeastVault.Api.Domain.Entities.MoveEntity", b =>
                {
                    b.Property<int>("PokemonId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Slot")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CurrentPp")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MoveId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PpUps")
                        .HasColumnType("INTEGER");

                    b.HasKey("PokemonId", "Slot");

                    b.ToTable("Moves");
                });

            modelBuilder.Entity("BeastVault.Api.Domain.Entities.PokemonEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AbilityId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BallId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ContestBeauty")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ContestCool")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ContestCute")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ContestSheen")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ContestSmart")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ContestTough")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CurrentFriendship")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CurrentHandler")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EggLocation")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("EggMetDate")
                        .HasColumnType("TEXT");

                    b.Property<uint>("EncryptionConstant")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("Experience")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("FatefulEncounter")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Favorite")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FileId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Form")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("FormArgument")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Gender")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HandlingTrainerFriendship")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HandlingTrainerGender")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HandlingTrainerLanguage")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HandlingTrainerMemory")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HandlingTrainerMemoryFeeling")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HandlingTrainerMemoryIntensity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HandlingTrainerMemoryVariable")
                        .HasColumnType("INTEGER");

                    b.Property<string>("HandlingTrainerName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("HeightScalar")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HeldItemId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsEgg")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsShiny")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Level")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("MetDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("MetLocation")
                        .HasColumnType("TEXT");

                    b.Property<int>("Nature")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nickname")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.Property<int>("OTGender")
                        .HasColumnType("INTEGER");

                    b.Property<string>("OTLanguage")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("OriginGame")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OriginalTrainerMemory")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OriginalTrainerMemoryFeeling")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OriginalTrainerMemoryIntensity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OriginalTrainerMemoryVariable")
                        .HasColumnType("INTEGER");

                    b.Property<string>("OtName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<uint>("PersonalityId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PokerusDays")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PokerusState")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PokerusStrain")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Scale")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Sid")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SpeciesId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SpriteKey")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("TeraType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Tid")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WeightScalar")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OriginGame");

                    b.HasIndex("SpeciesId", "IsShiny");

                    b.ToTable("Pokemon");
                });

            modelBuilder.Entity("BeastVault.Api.Domain.Entities.PokemonTagEntity", b =>
                {
                    b.Property<int>("PokemonId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TagId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PokemonId", "TagId");

                    b.ToTable("PokemonTags");
                });

            modelBuilder.Entity("BeastVault.Api.Domain.Entities.RelearnMoveEntity", b =>
                {
                    b.Property<int>("PokemonId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Slot")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MoveId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PokemonId", "Slot");

                    b.ToTable("RelearnMoves");
                });

            modelBuilder.Entity("BeastVault.Api.Domain.Entities.StatsEntity", b =>
                {
                    b.Property<int>("PokemonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EvAtk")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EvDef")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EvHp")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EvSpa")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EvSpd")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EvSpe")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("HyperTrainedAtk")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("HyperTrainedDef")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("HyperTrainedHp")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("HyperTrainedSpa")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("HyperTrainedSpd")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("HyperTrainedSpe")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IvAtk")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IvDef")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IvHp")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IvSpa")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IvSpd")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IvSpe")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StatAtk")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StatDef")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StatHp")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StatHpCurrent")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StatSpa")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StatSpd")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StatSpe")
                        .HasColumnType("INTEGER");

                    b.HasKey("PokemonId");

                    b.ToTable("Stats");
                });

            modelBuilder.Entity("BeastVault.Api.Domain.Entities.TagEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });
#pragma warning restore 612, 618
        }
    }
}
